# ==========================
# Azure DevOps Pipeline: Frontend Docker Build & Push
# ==========================

pool:
  name: 'Dev'

variables:
  version: 'frontend_$(Build.BuildId)'

stages:
# ---------------------------------------------
# 1️⃣ Checkout Code
# ---------------------------------------------
- stage: CheckoutCode
  displayName: 'Checkout Code'
  jobs:
  - job: checkout
    displayName: 'Checkout Source Code'
    steps:
    - checkout: self

# ---------------------------------------------
# 2️⃣ Build and Push Docker Image
# ---------------------------------------------
- stage: BuildAndPushDockerImage
  displayName: 'Build and Push Docker Image'
  dependsOn: CheckoutCode
  jobs:
  - job: buildAndPush
    displayName: 'Build & Push Docker Image to ACR'
    steps:
    - checkout: self

    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: 'devopsplines'       # Service connection name to ACR
        repository: 'perseverance-project'       # Repository name in ACR
        command: 'buildAndPush'                  # Combined build+push command
        Dockerfile: '**/Dockerfile'              # Path to Dockerfile
        tags: |
          $(version)                            

# ---------------------------------------------
# 3️⃣ Clean Up Docker Images
# ---------------------------------------------
- stage: CleanupDockerImages
  displayName: 'Clean Up Docker Images'
  dependsOn: BuildAndPushDockerImage
  jobs:
  - job: cleanup
    displayName: 'Remove Docker Images from Agent'
    steps:
    - script: |
        echo "Cleaning up local Docker images..."
        docker rmi -f $(docker images -aq) || true
      displayName: 'Remove all Docker images'

# ---------------------------------------------
# 4️⃣ Modify and Publish Kubernetes Manifest
# ---------------------------------------------
- stage: ModifyAndPublishYaml
  displayName: 'Modify and Publish Kubernetes Manifest'
  dependsOn: CleanupDockerImages
  jobs:
  - job: modifyAndPublish
    displayName: 'Modify Kubernetes Manifest and Publish'
    steps:
    - checkout: self

    - script: |
        echo "Replacing VERSION with $(version) in frontend.yml"
        sed -i "s|VERSION|$(version)|g" frontend.yml
        echo "Modified frontend.yml content:"
        cat frontend.yml
        mkdir -p $(Build.ArtifactStagingDirectory)
        cp frontend.yml $(Build.ArtifactStagingDirectory)/
      displayName: 'Modify Kubernetes Manifest'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Modified Kubernetes Manifest'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'frontend'
        publishLocation: 'Container'
